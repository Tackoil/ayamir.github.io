<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WebGL on Ayamir&#39;s Blog</title>
    <link>https://ayamir.github.io/tags/webgl/</link>
    <description>Recent content in WebGL on Ayamir&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>miracle_l@bupt.edu.cn (Ayamir)</managingEditor>
    <webMaster>miracle_l@bupt.edu.cn (Ayamir)</webMaster>
    <lastBuildDate>Thu, 03 Mar 2022 10:31:38 +0800</lastBuildDate>
    <atom:link href="https://ayamir.github.io/tags/webgl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>WebGL 样例的解释</title>
      <link>https://ayamir.github.io/posts/knowledge/webgl/webgl-samples-explanation/</link>
      <pubDate>Thu, 03 Mar 2022 10:31:38 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/webgl/webgl-samples-explanation/</guid>
      <description>Context Create an HTML5 canvas Get the canvas id Obtain WebGL Context The parameter WebGLContextAttributes is not mandatory. Attributes Description Default value alpha true: provide an alpha buffer to the canvas; true depth true: drawing buffer contains a depth buffer of at least 16 bits; true stencil true: drawing buffer contains a stencil buffer of at least 8 bits; false antialias true: drawing buffer performs anti-aliasing true premultipliedAlpha true: drawing</description>
    </item>
    <item>
      <title>WebGL 样例</title>
      <link>https://ayamir.github.io/posts/knowledge/webgl/webgl-samples/</link>
      <pubDate>Thu, 03 Mar 2022 10:31:31 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/webgl/webgl-samples/</guid>
      <description>Structure of WebGL Application WebGL application code is a combination of JavaScript and OpenGL Shader Language. JavaScript is required to communicate with the CPU. OpenGL Shader Language is required to communicate with the GPU. Samples 2D coordinates 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33</description>
    </item>
    <item>
      <title>WebGL 中的管线</title>
      <link>https://ayamir.github.io/posts/knowledge/webgl/webgl-pipeline/</link>
      <pubDate>Thu, 03 Mar 2022 10:31:22 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/webgl/webgl-pipeline/</guid>
      <description>Overview JavaScript JavaScript is used to write the control code of the program, which includes the following actions: Initialization: initialize WebGL context. Arrays: create arrays to hold the data of the geometry. Buffer objects: create buffer objects by passing the arrays as parameters. Shaders: create, compile and link the shaders. Attributes: create attributes, enable them and associate them with buffer objects. Uniforms: associate the uniforms. Transformation matrix: create transformation matrix.</description>
    </item>
    <item>
      <title>WebGL 基础知识</title>
      <link>https://ayamir.github.io/posts/knowledge/webgl/webgl-basics/</link>
      <pubDate>Thu, 03 Mar 2022 10:31:04 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/webgl/webgl-basics/</guid>
      <description>Coordinate System There are x, y, z axes in WebGL, where the z axis signifies depth. The coordinates in WebGL are restricted to (1, 1, 1) and (-1, -1, -1). Positive value meaning: z: near viewer. x: near right. y: near top. Graphics System Vertices To draw a polygon, we need to mark the points on the plane and join them to form a desired polygon. A vertex is a</description>
    </item>
  </channel>
</rss>
