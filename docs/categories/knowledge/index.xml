<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>knowledge on Ayamir&#39;s Blog</title>
    <link>https://ayamir.github.io/categories/knowledge/</link>
    <description>Recent content in knowledge on Ayamir&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>miracle_l@bupt.edu.cn (Ayamir)</managingEditor>
    <webMaster>miracle_l@bupt.edu.cn (Ayamir)</webMaster>
    <lastBuildDate>Tue, 23 Jan 2024 01:05:20 +0800</lastBuildDate>
    <atom:link href="https://ayamir.github.io/categories/knowledge/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>H264 Encode</title>
      <link>https://ayamir.github.io/posts/knowledge/h264-encode/</link>
      <pubDate>Tue, 23 Jan 2024 01:05:20 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/h264-encode/</guid>
      <description>编码框架 编码器包含两个方向的码流分支： 从左到右的前向码流分支为编码过程； 从右到左的反向码流分支为重建过程。 前向编码分支 以16x16像素的MB</description>
    </item>
    <item>
      <title>WebRTC 中关于视频自适应的相关设置</title>
      <link>https://ayamir.github.io/posts/knowledge/webrtc/note-for-webrtc-1/</link>
      <pubDate>Thu, 15 Sep 2022 20:48:51 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/webrtc/note-for-webrtc-1/</guid>
      <description>概况 WebRTC提供了视频自适应机制，其目的主要是通过降低编码的视频的质量来减少带宽和 CPU 消耗。 视频自适应发生的情形：带宽或 CPU 资源发出信号表明</description>
    </item>
    <item>
      <title>WebGL 样例的解释</title>
      <link>https://ayamir.github.io/posts/knowledge/webgl/webgl-samples-explanation/</link>
      <pubDate>Thu, 03 Mar 2022 10:31:38 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/webgl/webgl-samples-explanation/</guid>
      <description>Context Create an HTML5 canvas Get the canvas id Obtain WebGL Context The parameter WebGLContextAttributes is not mandatory. Attributes Description Default value alpha true: provide an alpha buffer to the canvas; true depth true: drawing buffer contains a depth buffer of at least 16 bits; true stencil true: drawing buffer contains a stencil buffer of at least 8 bits; false antialias true: drawing buffer performs anti-aliasing true premultipliedAlpha true: drawing</description>
    </item>
    <item>
      <title>WebGL 样例</title>
      <link>https://ayamir.github.io/posts/knowledge/webgl/webgl-samples/</link>
      <pubDate>Thu, 03 Mar 2022 10:31:31 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/webgl/webgl-samples/</guid>
      <description>Structure of WebGL Application WebGL application code is a combination of JavaScript and OpenGL Shader Language. JavaScript is required to communicate with the CPU. OpenGL Shader Language is required to communicate with the GPU. Samples 2D coordinates 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33</description>
    </item>
    <item>
      <title>WebGL 中的管线</title>
      <link>https://ayamir.github.io/posts/knowledge/webgl/webgl-pipeline/</link>
      <pubDate>Thu, 03 Mar 2022 10:31:22 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/webgl/webgl-pipeline/</guid>
      <description>Overview JavaScript JavaScript is used to write the control code of the program, which includes the following actions: Initialization: initialize WebGL context. Arrays: create arrays to hold the data of the geometry. Buffer objects: create buffer objects by passing the arrays as parameters. Shaders: create, compile and link the shaders. Attributes: create attributes, enable them and associate them with buffer objects. Uniforms: associate the uniforms. Transformation matrix: create transformation matrix.</description>
    </item>
    <item>
      <title>WebGL 基础知识</title>
      <link>https://ayamir.github.io/posts/knowledge/webgl/webgl-basics/</link>
      <pubDate>Thu, 03 Mar 2022 10:31:04 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/webgl/webgl-basics/</guid>
      <description>Coordinate System There are x, y, z axes in WebGL, where the z axis signifies depth. The coordinates in WebGL are restricted to (1, 1, 1) and (-1, -1, -1). Positive value meaning: z: near viewer. x: near right. y: near top. Graphics System Vertices To draw a polygon, we need to mark the points on the plane and join them to form a desired polygon. A vertex is a</description>
    </item>
    <item>
      <title>VR 和 全景视频的区别总结</title>
      <link>https://ayamir.github.io/posts/knowledge/360video/summary-for-vr-and-panoramic-video/</link>
      <pubDate>Mon, 17 Jan 2022 17:02:51 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/360video/summary-for-vr-and-panoramic-video/</guid>
      <description>VR 和 360 度全景视频都是获得沉浸式体验的重要途径，除此之外，AR（Argmented Reality）和 MR（Mixed Reality）也是比较火</description>
    </item>
    <item>
      <title>全景视频中视口预测相关方法总结</title>
      <link>https://ayamir.github.io/posts/knowledge/360video/summary-for-vp/</link>
      <pubDate>Fri, 07 Jan 2022 23:08:36 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/360video/summary-for-vp/</guid>
      <description>视口预测是什么？ 视口预测 (Viewport Predict) 是全景视频中特有的一种用于进一步优化码率自适应的方式。 相较于全景视频 360 度无死角的特性，用户实际上能看到的内容其实</description>
    </item>
    <item>
      <title>多媒体基础知识</title>
      <link>https://ayamir.github.io/posts/knowledge/mm-base/</link>
      <pubDate>Mon, 13 Dec 2021 10:03:17 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/mm-base/</guid>
      <description>媒体处理过程 解协议 将流媒体传输方案中要求的数据解析为标准的相应封装格式数据。 音视频在网络中传播时需要遵守对应的传输方案所要求的格式，如 DAS</description>
    </item>
    <item>
      <title>重学C&#43;&#43;：容器和迭代器</title>
      <link>https://ayamir.github.io/posts/knowledge/cpp/iterator/</link>
      <pubDate>Thu, 28 Oct 2021 17:09:18 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/cpp/iterator/</guid>
      <description>常见的坑 所有标准库容器都支持迭代器，而只有少数几种支持下标运算符。 string虽然不是容器，但是支持很多容器的操作。 容器不为空时：begin</description>
    </item>
    <item>
      <title>重学C&#43;&#43;：标准库类模板Vector</title>
      <link>https://ayamir.github.io/posts/knowledge/cpp/vector/</link>
      <pubDate>Thu, 28 Oct 2021 15:35:17 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/cpp/vector/</guid>
      <description>常见的坑 vector的默认初始化是否合法取决于vector内对象所属的类是否要求显式初始化。 使用()和{}对vector执行初始化含义不同。</description>
    </item>
    <item>
      <title>重学C&#43;&#43;：标准库类型string</title>
      <link>https://ayamir.github.io/posts/knowledge/cpp/string/</link>
      <pubDate>Thu, 28 Oct 2021 10:31:33 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/cpp/string/</guid>
      <description>常见的坑 string.size()和string.length()等价。 string.size()和其他STL容器的命名风格相一致（如vec</description>
    </item>
    <item>
      <title>重学C&#43;&#43;：类型推导</title>
      <link>https://ayamir.github.io/posts/knowledge/cpp/auto/</link>
      <pubDate>Tue, 26 Oct 2021 21:14:32 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/cpp/auto/</guid>
      <description>常见的坑 auto可以在一条语句中声明多个变量，但是所有变量的类型必须一致。 decltype在分析表达式类型时并不执行表达式。 decltype</description>
    </item>
    <item>
      <title>重学C&#43;&#43;：Const二三事</title>
      <link>https://ayamir.github.io/posts/knowledge/cpp/const/</link>
      <pubDate>Tue, 26 Oct 2021 15:53:11 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/cpp/const/</guid>
      <description>常见的坑 仅用const修饰的对象只在单个文件中有效，如果想在多个文件之间共享const对象，必须在对象定义的前面加extern。 允许为一个常</description>
    </item>
    <item>
      <title>重学C&#43;&#43;：引用和指针</title>
      <link>https://ayamir.github.io/posts/knowledge/cpp/reference-and-pointer/</link>
      <pubDate>Tue, 26 Oct 2021 15:49:49 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/cpp/reference-and-pointer/</guid>
      <description>常见的坑 &amp;amp;和*在不同的上下文里面其含义并不相同，因此完全可以当成不同的符号看待。 1 2 3 4 5 6 int i = 42; int &amp;amp;r = i; // &amp;amp;在类型名后出</description>
    </item>
    <item>
      <title>重学C&#43;&#43;：类型系统基础</title>
      <link>https://ayamir.github.io/posts/knowledge/cpp/Cpp-Types/</link>
      <pubDate>Mon, 18 Oct 2021 19:32:22 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/cpp/Cpp-Types/</guid>
      <description>常见的坑 int, short, long, long long都是带符号的，在前面添加unsigned就能得到无符号类型。 字符型被分为3种：char, signed char, unsigned char，前两种并不等</description>
    </item>
    <item>
      <title>修复 Archlinux 上出现的 GPGME Error</title>
      <link>https://ayamir.github.io/posts/knowledge/linux/how-to-fix-GPGME-error/</link>
      <pubDate>Fri, 11 Jun 2021 08:50:43 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/linux/how-to-fix-GPGME-error/</guid>
      <description>Delete old sync files 1 sudo rm /var/lib/pacman/sync/* Re init pacman-key 1 sudo pacman-key --init Populate key 1 sudo pacman-key --populate Re sync 1 sudo pacman -Syyy Now you can update successfully!</description>
    </item>
    <item>
      <title>Linux 权限相关命令解读</title>
      <link>https://ayamir.github.io/posts/knowledge/linux/linux-authority/</link>
      <pubDate>Mon, 15 Mar 2021 21:43:35 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/linux/linux-authority/</guid>
      <description>文件和目录的权限 下图为使用exa命令的部分截图 上图中的 Permission 字段下面的字母表示权限 第一个字母表示 文件类型 ： 属性 文件类型 - 普通文件 d 目录文件 l 符号</description>
    </item>
    <item>
      <title>在 Linux 上手动设置 DNS</title>
      <link>https://ayamir.github.io/posts/knowledge/linux/dns-settings-on-archlinux/</link>
      <pubDate>Tue, 26 Jan 2021 21:43:35 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/knowledge/linux/dns-settings-on-archlinux/</guid>
      <description>Arch Linux DNS 设置 安装dnsmasq 1 sudo pacman -S dnsmasq 配置/etc/resolv.conf中的域名代理服务器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</description>
    </item>
  </channel>
</rss>
