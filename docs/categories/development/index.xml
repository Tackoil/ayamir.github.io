<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>development on Ayamir&#39;s Blog</title>
    <link>https://ayamir.github.io/categories/development/</link>
    <description>Recent content in development on Ayamir&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>miracle_l@bupt.edu.cn (Ayamir)</managingEditor>
    <webMaster>miracle_l@bupt.edu.cn (Ayamir)</webMaster>
    <lastBuildDate>Sun, 23 Apr 2023 21:28:38 +0800</lastBuildDate>
    <atom:link href="https://ayamir.github.io/categories/development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在Linux下如何搭建WebRTC的开发环境</title>
      <link>https://ayamir.github.io/posts/development/webrtc-development-prepare/</link>
      <pubDate>Sun, 23 Apr 2023 21:28:38 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/development/webrtc-development-prepare/</guid>
      <description>本文主要记录笔者在 Gentoo Linux 下面搭建 WebRTC 开发环境的过程。 准备工作 网络：可以科学上网的梯子 IDE：VSCode 或者 CLion 安装depot_tools Google 有自己</description>
    </item>
    <item>
      <title>MLflow 的用法</title>
      <link>https://ayamir.github.io/posts/development/note-for-mlflow/</link>
      <pubDate>Mon, 07 Mar 2022 19:25:46 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/development/note-for-mlflow/</guid>
      <description>Overview MLflow是一个用于管理机器学习全生命周期的框架。 其主要的作用是： 完成训练和测试过程中不同超参数的结果的记录、对比和可视化——MLflo</description>
    </item>
    <item>
      <title>使用 WebXR 完成基于分块的全景视频自适应码率播放器</title>
      <link>https://ayamir.github.io/posts/development/webxr-for-panoramic-video/</link>
      <pubDate>Fri, 25 Feb 2022 11:04:23 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/development/webxr-for-panoramic-video/</guid>
      <description>最近几天一直在用WebXR的技术重构目前的基于分块的全景视频自适应码率播放客户端，下面简述一下过程。 首先结论是：分块播放+自适应码率+完全的</description>
    </item>
    <item>
      <title>在 Jupyter Notebook 中设置 Conda 环境</title>
      <link>https://ayamir.github.io/posts/development/use-jupyter-notebook-in-conda-env/</link>
      <pubDate>Tue, 15 Feb 2022 17:19:26 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/development/use-jupyter-notebook-in-conda-env/</guid>
      <description>远程启动jupyter notebool： 1 jupyter notebook --no-browser --ip=&amp;#34;&amp;lt;server-ip&amp;gt;&amp;#34; --port=&amp;#34;&amp;lt;server-port&amp;gt;&amp;#34; 激活预先配置好的conda环境，这里假设环境名为keras-tf-2.1.0： 1 conda activate keras-tf-2.1.0 安</description>
    </item>
    <item>
      <title>部署 Immersive Video OMAF-Sample</title>
      <link>https://ayamir.github.io/posts/development/Immersive-Video-Deploy/</link>
      <pubDate>Sat, 09 Oct 2021 15:31:46 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/development/Immersive-Video-Deploy/</guid>
      <description>原仓库地址：Immersive-Video-Sample 修改之后的仓库：Immersive-Video-Sample Server 端搭建 修改 Dockerfile 手动设置 wget</description>
    </item>
    <item>
      <title>在 microsoft-edge-dev 上设置 Python selenium</title>
      <link>https://ayamir.github.io/posts/development/python-selenium-settings-on-microsoft-edge-dev-on-linux/</link>
      <pubDate>Fri, 26 Mar 2021 21:43:35 +0800</pubDate><author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/posts/development/python-selenium-settings-on-microsoft-edge-dev-on-linux/</guid>
      <description>Get Correct Version 1 microsoft-edge-dev --version The output is Microsoft Edge 91.0.831.1 dev in my case. Get Corresponding WebDriver Find the corresponding version at msedgewebdriverstorage and download the zip. Extract it to you path like /usr/local/bin or $HOME/.local/bin. Write Code Following is a example. 1 2 3 4 5 6 7 8 9 10 11 12 13 from msedge.selenium_tools import EdgeOptions, Edge options = EdgeOptions() options.use_chromium = True options.binary_location =</description>
    </item>
  </channel>
</rss>
