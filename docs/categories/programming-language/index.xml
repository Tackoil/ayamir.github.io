<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming Language on Ayamir&#39;s Blog</title>
    <link>https://ayamir.github.io/categories/programming-language/</link>
    <description>Recent content in Programming Language on Ayamir&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>miracle_l@bupt.edu.cn (Ayamir)</managingEditor>
    <webMaster>miracle_l@bupt.edu.cn (Ayamir)</webMaster>
    <lastBuildDate>Thu, 28 Oct 2021 17:09:18 +0800</lastBuildDate><atom:link href="https://ayamir.github.io/categories/programming-language/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>重学C&#43;&#43;：容器和迭代器</title>
      <link>https://ayamir.github.io/2021/10/iterator/</link>
      <pubDate>Thu, 28 Oct 2021 17:09:18 +0800</pubDate>
      <author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/2021/10/iterator/</guid>
      <description>常见的坑 所有标准库容器都支持迭代器，而只有少数几种支持下标运算符。 string虽然不是容器，但是支持很多容器的操作。 容器不为空时：begin</description>
    </item>
    
    <item>
      <title>重学C&#43;&#43;：标准库类模板Vector</title>
      <link>https://ayamir.github.io/2021/10/vector/</link>
      <pubDate>Thu, 28 Oct 2021 15:35:17 +0800</pubDate>
      <author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/2021/10/vector/</guid>
      <description>常见的坑 vector的默认初始化是否合法取决于vector内对象所属的类是否要求显式初始化。 使用()和{}对vector执行初始化含义不同。</description>
    </item>
    
    <item>
      <title>重学C&#43;&#43;：标准库类型string</title>
      <link>https://ayamir.github.io/2021/10/string/</link>
      <pubDate>Thu, 28 Oct 2021 10:31:33 +0800</pubDate>
      <author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/2021/10/string/</guid>
      <description>常见的坑 string.size()和string.length()等价。 string.size()和其他STL容器的命名风格相一致（如vec</description>
    </item>
    
    <item>
      <title>重学C&#43;&#43;：类型推导</title>
      <link>https://ayamir.github.io/2021/10/auto/</link>
      <pubDate>Tue, 26 Oct 2021 21:14:32 +0800</pubDate>
      <author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/2021/10/auto/</guid>
      <description>常见的坑 auto可以在一条语句中声明多个变量，但是所有变量的类型必须一致。 decltype在分析表达式类型时并不执行表达式。 decltype</description>
    </item>
    
    <item>
      <title>重学C&#43;&#43;：Const二三事</title>
      <link>https://ayamir.github.io/2021/10/const/</link>
      <pubDate>Tue, 26 Oct 2021 15:53:11 +0800</pubDate>
      <author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/2021/10/const/</guid>
      <description>常见的坑 仅用const修饰的对象只在单个文件中有效，如果想在多个文件之间共享const对象，必须在对象定义的前面加extern。 允许为一个常</description>
    </item>
    
    <item>
      <title>重学C&#43;&#43;：引用和指针</title>
      <link>https://ayamir.github.io/2021/10/reference-and-pointer/</link>
      <pubDate>Tue, 26 Oct 2021 15:49:49 +0800</pubDate>
      <author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/2021/10/reference-and-pointer/</guid>
      <description>常见的坑 &amp;amp;和*在不同的上下文里面其含义并不相同，因此完全可以当成不同的符号看待。 1 2 3 4 5 6 int i = 42; int &amp;amp;r = i; // &amp;amp;在类型名后出</description>
    </item>
    
    <item>
      <title>重学C&#43;&#43;：类型系统基础</title>
      <link>https://ayamir.github.io/2021/10/cpp-types/</link>
      <pubDate>Mon, 18 Oct 2021 19:32:22 +0800</pubDate>
      <author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/2021/10/cpp-types/</guid>
      <description>常见的坑 int, short, long, long long都是带符号的，在前面添加unsigned就能得到无符号类型。 字符型被分为3种：char, signed char, unsigned char，前两种并不等</description>
    </item>
    
    <item>
      <title>Python selenium settings on microsoft-edge-dev</title>
      <link>https://ayamir.github.io/2021/03/python-selenium-settings-on-microsoft-edge-dev-on-linux/</link>
      <pubDate>Fri, 26 Mar 2021 21:43:35 +0800</pubDate>
      <author>miracle_l@bupt.edu.cn (Ayamir)</author>
      <guid>https://ayamir.github.io/2021/03/python-selenium-settings-on-microsoft-edge-dev-on-linux/</guid>
      <description>Get Correct Version 1  microsoft-edge-dev --version   The output is Microsoft Edge 91.0.831.1 dev in my case.
Get Corresponding WebDriver Find the corresponding version at msedgewebdriverstorage and download the zip.
Extract it to you path like /usr/local/bin or $HOME/.local/bin.
Write Code Following is a example.
1 2 3 4 5 6 7 8 9 10 11 12 13  from msedge.selenium_tools import EdgeOptions, Edge options = EdgeOptions() options.use_chromium = True options.</description>
    </item>
    
  </channel>
</rss>
