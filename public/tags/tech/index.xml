<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on Ayamir&#39;s Blog</title>
    <link>https://ayamir.github.io/tags/tech/</link>
    <description>Recent content in Tech on Ayamir&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Oct 2021 15:31:46 +0800</lastBuildDate><atom:link href="https://ayamir.github.io/tags/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Immersive Video OMAF-Sample Deploy</title>
      <link>https://ayamir.github.io/posts/immersive-video-deploy/</link>
      <pubDate>Sat, 09 Oct 2021 15:31:46 +0800</pubDate>
      
      <guid>https://ayamir.github.io/posts/immersive-video-deploy/</guid>
      <description>原仓库地址：Tech-Sample
修改之后的仓库：Tech-Sample
Server 端搭建 修改 Dockerfile 手动设置 wget 和 git 的 http_proxy
旧 package 目录 not found，修改为新 package 目录
因为找不到 glog 库因此加入软链接操作
ln -s /usr/local/lib64/libglog.so.0.6.0 /usr/local/lib64/libglog.so.0 重新编译内核 运行脚本时显示 libnuma 错误因此推断与 numa 设置有关
执行numactl -H显示只有一个 node，报错输出显示需要至少两个 numa 节点
查询资料之后获知可以使用 fakenuma 技术创造新节点，但是 Ubuntu 默认的内核没有开启对应的内核参数
手动下载 Linux 内核源代码到/usr/src/目录 wget https://mirrors.edge.kernel.org/pub/linux/kernel/v5.x/linux-5.11.1.tar.gz 解压 tar xpvf linux-5.11.1.tar.gz 复制现有内核配置 cd linux-5.11.1 &amp;amp;&amp;amp; cp -v /boot/config-$(uname -r) .config 安装必要的包 sudo apt install build-essential libncurses-dev bison flex libssl-dev libelf-dev 进入内核配置界面 sudo make menuconfig 按下/键分别查询CONFIG_NUMA和CONFIG_NUMA_EMU位置 手动勾选对应选项之后保存退出 重新编译并等待安装结束 sudo make -j $(nproc) &amp;amp;&amp;amp; sudo make modules_install &amp;amp;&amp;amp; sudo make install 修改grub启动参数加入 fake numa 配置 sudo vim /etc/default/grub 找到对应行并修改为</description>
    </item>
    
    <item>
      <title>Linux权限相关命令解读</title>
      <link>https://ayamir.github.io/posts/linux-authority/</link>
      <pubDate>Mon, 15 Mar 2021 21:43:35 +0800</pubDate>
      
      <guid>https://ayamir.github.io/posts/linux-authority/</guid>
      <description>文件和目录的权限 下图为使用exa命令的部分截图
上图中的 Permission 字段下面的字母表示权限 第一个字母表示 文件类型 ：
属性 文件类型 - 普通文件 d 目录文件 l 符号链接 符号链接文件剩余的属性都是 rwxrwxrwx，是伪属性值，符号链接指向的文件属性才是真正的文件属性 c 字符设备文件 表示以字节流形式处理数据的设备，如 modem b 块设备文件 表示以数据块方式处理数据的设备，如硬盘驱动或光盘驱动 剩下的 9 个位置上的字符称为 文件模式 ，每 3 个为一组，分别表示文件所有者、文件所属群组以及其他所有用户对该文件的读取、写入和执行权限
属性 文件 目录 r 允许打开和读取文件 如果设置了执行权限，允许列出目录下的内容 w 允许写入或截断文件，但是不允许重命名或删除文件 如果设置了执行权限，那么允许目录中的文件被创建、被删除和被重命名 x 允许把文件当作程序一样来执行 允许进入目录 id：显示用户身份标识 一个用户可以拥有文件和目录，同时对其拥有的文件和目录有控制权 用户之上是群组，一个群组可以由多个用户组成 文件和目录的访问权限由其所有者授予群组或者用户
下图为 Gentoo Linux 下以普通用户身份执行 id 命令的结果
uid 和 gid 分别说明了当前用户的用户编号与用户名、所属用户组的编号与组名 groups 后的内容说明了用户还属于哪些组，说明了其对应的编号和名称
许多类 UNIX 系统会将普通用户分配到一个公共的群组中如：users 现代 Linux 操作是创建一个独一无二的只有一个用户的同名群组
chmod：更改文件模式 chmod 支持两种标识方法
八进制表示法</description>
    </item>
    
  </channel>
</rss>
